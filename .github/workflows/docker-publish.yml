name: Docker

on:
  push:
    branches: [ master ]

env:
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  generate-matrix:
    name: Generate Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate.outputs.matrix }}
    steps:
      - uses: actions/checkout@master
      - id: generate
        name: Enumerate Dockerfiles
        run: |
          matrix="$(dirname */Dockerfile | sort -rn | jq -csR 'rtrimstr("\n") | split("\n") | { directory: . }')"
          echo "::set-output name=matrix::$matrix"
  build-image:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    name: ${{ matrix.directory }}
    steps:
      - uses: actions/checkout@master
      - name: Build Image
        run: |
          docker version
          dir='${{ matrix.directory }}'
          img="mschout/modperl:${dir//,/-}"
          docker build -t "$img" "$dir"
      - name: Inspect image creation and tag time
        run: |
          dir='${{ matrix.directory }}'
          img="mschout/modperl:${dir//,/-}"
          docker image inspect --format '{{.Created}}' "$img"
          docker image inspect --format '{{.Metadata.LastTagTime}}' "$img"

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into docker hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: docker.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Push Docker image
        id: push-docker-image
        run: |
          dir='${{ matrix.directory }}'
          img="mschout/modperl:${dir//,/-}"
          docker push docker.io/$img:latest
